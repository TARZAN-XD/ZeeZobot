const express = require('express');
const { makeWASocket, useSingleFileAuthState } = require('@whiskeysockets/baileys');
const qrcode = require('qrcode');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// ุตูุญุฉ ุงูุจุฏุงูุฉ
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// API ูุทูุจ ุฑูุฒ ุงูุงูุชุฑุงู
app.get('/code', async (req, res) => {
  const number = req.query.number;
  if (!number || !/^\d+$/.test(number)) {
    return res.status(400).json({ error: 'ุฑูู ุบูุฑ ุตุงูุญ' });
  }

  try {
    const { state, saveState } = useSingleFileAuthState(`./session-${number}.json`);

    const sock = makeWASocket({
      auth: state,
      printQRInTerminal: false,
    });

    // ุฑุจุท ุญุฏุซ ุญูุธ ุงูุฌูุณุฉ
    sock.ev.on('creds.update', saveState);

    // ุฌูุจ ุฑูุฒ ุงูุงูุชุฑุงู (pairing code)
    const code = await sock.requestPairingCode(number + '@s.whatsapp.net');

    // ุฅุบูุงู ุงูุงุชุตุงู ุจุนุฏ ุฌูุจ ุงูุฑูุฒ ูุชูููุฑ ุงูููุงุฑุฏ
    await sock.logout();

    console.log(`๐ ุฑูุฒ ุงูุงูุชุฑุงู ููุฑูู ${number}: ${code}`);
    res.json({ code });
  } catch (err) {
    console.error('โ ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุฑูุฒ ุงูุงูุชุฑุงู:', err);
    res.status(500).json({ error: 'ูุดู ูู ุชูููุฏ ุฑูุฒ ุงูุงูุชุฑุงู' });
  }
});

// ุชุดุบูู ุงูุณูุฑูุฑ
app.listen(PORT, () => {
  console.log(`๐ ุงูุณูุฑูุฑ ูุนูู ุนูู http://localhost:${PORT}`);
});
